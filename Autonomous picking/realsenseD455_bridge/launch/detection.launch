<launch>

    <include file="$(find pickingv2)/launch/cam_to_right.launch"/>

    <!-- Kinect  -->
    <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch">
        <arg name="publish_tf" value="true"/>
    </include>


    <!-- specify the planning pipeline -->
    <arg name="pipeline" default="ompl" />

    <!-- By default, we do not start a database (it can be large) -->
    <arg name="db" default="false" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find dual_moveit_config)/default_warehouse_mongo_db" />

    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false" />

    <!-- By default, we will load or override the robot_description -->
    <arg name="load_robot_description" default="true"/>

    <!-- Set execution mode for fake execution controllers -->
    <arg name="execution_type" default="interpolate" />

    <!--
    By default, hide joint_state_publisher's GUI

    MoveIt's "demo" mode replaces the real robot driver with the joint_state_publisher.
    The latter one maintains and publishes the current joint configuration of the simulated robot.
    It also provides a GUI to move the simulated robot around "manually".
    This corresponds to moving around the real robot without the use of MoveIt.
    -->
    <!-- <arg name="use_gui" default="true" /> -->
    <arg name="use_gui" value="true"/>
    <arg name="use_rviz" default="true" />
    <!-- 机械臂 begin ++++++++++++++++++++++++++++++++++++++++++++ -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find pickingv2)/urdf/jaka_dual.xacro"/>
    <node name="rviz" pkg="rviz" type="rviz" args="-d /home/msi/1008_catkin_ws/src/realsenseD455_bridge/rviz/test_dual_p.rviz" required="true"
          output="screen"/>
  
    <!-- <node pkg="qjaka_gui" type="qjaka_gui" name="qjaka_gui" output="screen" respawn="false" respawn_delay="0.5">
        <param name="left_ip" value="192.168.0.132"/>
        <param name="right_ip" value="192.168.0.130"/>
    </node> -->

    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true"
          output="screen"/>
    <!-- 机械臂 end ++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
    <include file="$(find dual_moveit_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="fake_execution" value="true"/>
        <arg name="execution_type" value="$(arg execution_type)"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="pipeline" value="$(arg pipeline)"/>
        <arg name="load_robot_description" value="$(arg load_robot_description)"/>
    </include>
   
    <node pkg="detection" type="exec_cv.py" name="exec_cv"/>
    <node pkg="realsenseD455_bridge" type="wash_pointcloud.py" name="point_washer" />
	<!-- <node pkg="realsenseD455_bridge" type="detection_client.py" name="realsenseD455_bridge_processPC" /> -->
    
</launch>